name: Build and Push Docker to GHCR

on:
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'
  workflow_dispatch:

env:
  # This is used by the metadata action to name the final image
  IMAGE_NAME: arian-parser
  REGISTRY: ghcr.io
  GO_VERSION: 1.21

permissions:
  contents: read
  packages: write

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Run Go tests
        run: go test ./... -v

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # This action automatically creates all the tags we need (latest, git sha, semver)
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}
          tags: |
            # Create a 'latest' tag on pushes to the main branch
            type=raw,value=latest,enable={{isDefaultBranch}}
            # Create a tag with the git sha
            type=sha
            # Create a semver tag (e.g., v1.2.3) when a tag is pushed
            type=ref,event=tag

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # This single step builds the image ONCE and pushes it with ALL the tags
      # generated by the metadata action in the previous step.
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
