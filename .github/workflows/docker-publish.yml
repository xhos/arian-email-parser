name: build and push container to GHCR

on:
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'
  workflow_dispatch:

env:
  IMAGE_NAME: arian-email-parser
  REGISTRY: ghcr.io
  GO_VERSION: 1.21

permissions:
  contents: read
  packages: write

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v4

      - name: set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: run tests
        run: go test ./... -v

      - name: log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: get version info
        id: version
        run: |
          VERSION=$(grep -E "Major|Minor|Patch" internal/version/version.go | grep -E "= [0-9]+" | cut -d'=' -f2 | tr -d ' ' | tr '\n' '.' | sed 's/.$//')
          echo "version=v${VERSION}" >> $GITHUB_OUTPUT
          echo "build_time=$(date -u '+%Y-%m-%d_%H:%M:%S')" >> $GITHUB_OUTPUT
          echo "git_commit=${GITHUB_SHA}" >> $GITHUB_OUTPUT
          echo "git_branch=${GITHUB_REF_NAME}" >> $GITHUB_OUTPUT
          echo "Version: v${VERSION}"

      - name: extract docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest,enable=${{ github.ref_name == github.event.repository.default_branch }}
            type=raw,value=${{ steps.version.outputs.version }}
            type=sha
            type=ref,event=tag

      - name: set up docker buildx
        uses: docker/setup-buildx-action@v3

      - name: build and push docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            VERSION=${{ steps.version.outputs.version }}
            BUILD_TIME=${{ steps.version.outputs.build_time }}
            GIT_COMMIT=${{ steps.version.outputs.git_commit }}
            GIT_BRANCH=${{ steps.version.outputs.git_branch }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
